openapi: 3.0.0
info:
  title: Task Management API
  description: A secure and scalable task management API
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.example.com
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Task:
      type: object
      properties:
        title:
          type: string
          description: The title of the task
        description:
          type: string
          description: The description of the task
        status:
          type: string
          enum: [pending, in-progress, completed]
          description: The current status of the task
        dueDate:
          type: string
          format: date-time
          description: The due date of the task
        priority:
          type: string
          enum: [low, medium, high]
          description: The priority level of the task
      required:
        - title
        - status

    User:
      type: object
      properties:
        username:
          type: string
          description: The username of the user
        email:
          type: string
          format: email
          description: The email address of the user
        password:
          type: string
          format: password
          description: The password of the user
      required:
        - username
        - email
        - password

paths:
  /api/tasks:
    get:
      summary: Get all tasks
      description: Retrieve a list of all tasks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
        '500':
          description: Server error

    post:
      summary: Create a new task
      description: Create a new task with the provided details
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Server error

  /api/tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The task ID

    get:
      summary: Get a specific task
      description: Retrieve a specific task by its ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '401':
          description: Unauthorized
        '500':
          description: Server error

    put:
      summary: Update a task
      description: Update a specific task by its ID
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Server error

    delete:
      summary: Delete a task
      description: Delete a specific task by its ID
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
        '401':
          description: Unauthorized
        '500':
          description: Server error

  /api/auth/register:
    post:
      summary: Register a new user
      description: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
        '400':
          description: Invalid input
        '409':
          description: User already exists
        '500':
          description: Server error

  /api/auth/login:
    post:
      summary: Login user
      description: Authenticate user and return JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
        '401':
          description: Invalid credentials
        '500':
          description: Server error

  /api/health:
    get:
      summary: Health check
      description: Check the health status of the API
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: API status
                  timestamp:
                    type: string
                    format: date-time
                    description: Current server time
                  memory:
                    type: object
                    properties:
                      total:
                        type: number
                        description: Total system memory in bytes
                      free:
                        type: number
                        description: Free system memory in bytes
                      used:
                        type: number
                        description: Used system memory in bytes
                  cpu:
                    type: object
                    properties:
                      load:
                        type: number
                        description: Current CPU load
                      cores:
                        type: integer
                        description: Number of CPU cores 